name: CI Pipeline

on:
  push:
    branches:
      - main
      - Sprint-1
      - Sprint-2
      - Sprint-3
      - Sprint-4
  pull_request:
    branches:
      - main
      - Sprint-1
      - Sprint-2
      - Sprint-3
      - Sprint-4

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Debug Environment Variables
        run: env | grep DB_

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ runner.os }}-${{ hashFiles('**/messagingApp-backend/pom.xml') }}
          restore-keys: maven-${{ runner.os }}-

      - name: Build and run tests
        run: |
          cd messagingApp-backend
          mvn clean install -U # -U forces maven to update dependencies
          mvn test

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Run tests
        run: |
          cd frontend
          npm test -- --watchAll=false